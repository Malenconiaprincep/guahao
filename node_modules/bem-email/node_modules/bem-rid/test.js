'use strict'

let assert = require("assert");
let rid = require('./');
let co = require('co');
let sleep = require('bem-sleep');

describe('BemRid', function() {
  this.timeout(300000000);
  describe('rid', function() {
    it('should return a random id', function(done) {
      let id = rid();
      assert.equal(id.length, 8);
      done();
    });

    it('should return a random id with 40 chars', function(done) {
      let id = rid({
        length: 40
      });
      assert.equal(id.length, 40);
      done();
    });

    it('should return a random id with 16 chars and 16 radix', function(done) {
      let id = rid({
        length: 16,
        radix: 16
      });
      assert.equal(id.length, 16);
      assert(id.match(/[0-9a-f]/));
      done();
    });

    it('run 1000000 times', function(done) {
      co(function*() {
        let count = 0,
          times = 100000,
          rand = {};
        for (let i = 0; i < times; i++) {
          let id = rid(8);
          rand[id] = 1;
          if (id.length !== 8) {
            count++;
          }
        }
        assert.equal(count, 0);
        assert.equal(times - Object.keys(rand).length, 0);
      }).then(done, done);
    });

    // it('run 1000000 times with length 16', function(done) {
    //   co(function*() {
    //     let count = 0,
    //       times = 100000,
    //       rand = {};
    //     for (let i = 0; i < times; i++) {
    //       let id = rid(16);
    //       rand[id] = 1;
    //       if (id.length !== 16) {
    //         count++;
    //       }
    //     }
    //     assert.equal(count, 0);
    //     assert.equal(times - Object.keys(rand).length, 0);
    //   }).then(done, done);
    // });

  });
});
